name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict

    - name: Cache conda packages
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Create conda environment
      shell: bash -l {0}
      run: |
        conda env create -f environment.yml
        conda activate larrak

    - name: Verify environment
      shell: bash -l {0}
      run: |
        conda activate larrak
        python scripts/check_environment.py

    - name: Run linting
      shell: bash -l {0}
      run: |
        conda activate larrak
        ruff --fix

    - name: Run type checking
      shell: bash -l {0}
      run: |
        conda activate larrak
        mypy --strict

    - name: Run tests
      shell: bash -l {0}
      run: |
        conda activate larrak
        pytest -q

  lint-only:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install ruff
      run: |
        pip install ruff

    - name: Run ruff check
      run: |
        ruff check --output-format=github