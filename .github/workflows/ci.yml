name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies (Ipopt optional)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libblas-dev liblapack-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff mypy pytest

      - name: Show dependency versions
        run: |
          python --version
          pip --version
          ruff --version
          mypy --version
          pytest --version

      - name: Lint (ruff --fix)
        run: |
          ruff check --fix .

      - name: Type check (mypy --strict)
        run: |
          mypy --strict .

      - name: Run tests (pytest -q)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q

name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge,defaults
        channel-priority: strict

    - name: Cache conda packages
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Create conda environment
      shell: bash -l {0}
      run: |
        conda env create -f environment.yml
        conda activate larrak

    - name: Verify environment
      shell: bash -l {0}
      run: |
        conda activate larrak
        python scripts/check_environment.py

    - name: Run linting
      shell: bash -l {0}
      run: |
        conda activate larrak
        ruff --fix

    - name: Run type checking
      shell: bash -l {0}
      run: |
        conda activate larrak
        mypy --strict

    - name: Run tests
      shell: bash -l {0}
      run: |
        conda activate larrak
        pytest -q

  lint-only:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install ruff
      run: |
        pip install ruff

    - name: Run ruff check
      run: |
        ruff check --output-format=github